Imagine you're working on a music player application that uses a singly linked list to store songs in the playlist. You want to implement a function delete_end() that efficiently removes the last song (node) from the playlist when the user decides to skip it.



Challenge: A new, last-minute order just arrived! A VIP customer has requested a special, limited-edition cupcake flavor you haven't included in the current list yet. You need to efficiently add this new order to the end of your existing linked list to ensure it's fulfilled in the correct sequence.



Question: How can you leverage the deleteAtEnd() function within your singly linked list to seamlessly integrate this new VIP order without disrupting the processing of your existing customer orders? Explain the steps involved in modifying the linked list to accommodate this new addition.



Input Format:

Give n number of values use -1 to stop the input. 



Output Format:

Do print the values of each node as space-separated.


Constraints:

1 <= input <= 10^9


SOLUTION:


class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class Linkedlist:
    def __init__(self):
        self.head=None
    def insert_at_end(self,data):
        new_node=Node(data)
        if not self.head:
            self.head=new_node
        else:
            current=self.head
            while(current.next):
                current=current.next
            current.next=new_node
    def delete_end(self):
        if not self.head:
            print("List is empty,nothig to delete")
            return
        if not self.head.next:
            self.head=None
            return
        current=self.head
        while current.next.next:
            current=current.next
        current.next=None    
    def display(self):
        current=self.head
        while(current):
            print(current.data,end=" ")
            current=current.next
#main program
ll=Linkedlist()
while(1):
    value=int(input())
    if value==-1:
        break
    ll.insert_at_end(value)
ll.delete_end()
ll.display()    
        
