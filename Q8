You are working on a project for a library management system. The library has an extensive collection of books, and you need to implement a feature to display the titles of the books in reverse order of how they were added. The system uses a doubly linked list to store and manage the books.

Your task is to complete the dll_reverse_display() function that takes the tail (last node) of the doubly linked list and prints the book titles from the last node to the first node.

Input Format
First Line of Input consists of Integer,Number of books
Next Line of Input consists of String,Name of the Books

Output Format
Display the titles of the books from the last book to the first book.

Sample Input:
2
Connect the dots
The Secret

Sample Output:
The Secret
Connect the dots


SOLUTION:


class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
        self.prev=None
class DoublyLinkedlist:
    def __init__(self):
        self.head=None
        self.tail=None
        #inset at the end
    def insert_at_the_end(self,data):
        new_node=Node(data)
        if self.head is None:
            self.head=new_node
            self.tail=new_node
        else:    
            self.tail.next=new_node
            new_node.prev=self.tail
            self.tail=new_node
    def reverse_print(self):
        current=self.tail
        while current is not None:
            print(current.data)
            current=current.prev
#main program
dll=DoublyLinkedlist()
n=int(input())
for i in range(n):
    title=input()
    dll.insert_at_the_end(title)
dll.reverse_print()

