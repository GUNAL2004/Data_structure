Imagine you're developing a to-do list application that uses a singly linked list to store tasks. Each node in the list represents a task with a description (string) and a completion status (boolean). You want to allow users to easily add new tasks to the top of their to-do list. This is where the insert_begin() function comes in.

Input Format:

Give n number of values use -1 to stop the input.

Output Format:

Do print the values of each node as space-separated.


Constraints:

1 <= input <= 10^9



Sample Input:

45

67

89

23

10

90

40

20

30

11

-1



Sample Output:

11 30 20 40 90 10 23 89 67 45



SOLUTION:


class Node:
    def __init__(self,data):
        self.data=data
        self.next=None
class Linkedlist:
    def __init__(self):
        self.head=None
    def insertbegin(self,data):
        new_node=Node(data)
        new_node.next=self.head
        self.head=new_node
    def display(self):
        current=self.head
        while(current):
            print(current.data,end=" ")
            current=current.next
#main program
ll=Linkedlist()
while True:
    value=int(input())
    if value==-1:
        break
    ll.insertbegin(value)
ll.display()
