You are working on a project for a car showroom management system. The showroom has a circular display of car models, where the last car in the display points back to the first car, creating a circular linked list. You need to implement a feature to display the car models in the order they are arranged in the circular display.

Your task is to complete the forward_display() function that takes the head (starting node) of the circular linked list and prints the car models from the first node back to the starting node, completing the circle.

Input Format
First Line of Input consists of Integer,Number of cars
Next Line of Input consists of String,Model of the Cars

Output Format
Display the Models of the cars from the first node back to the starting node.

Sample Input:
2
Tata Nexon
Tata Altroz

Sample Output:
Tata Nexon
Tata Altroz



SOLUTION:



class Node:
    def __init__(self,data):
        self.data=data
        self.prev=None
        self.next=None
class Doublylinkedlist:
    def __init__(self):
        self.head=None
    def insert_at_end(self,data):
        new_node=Node(data)
        if not self.head:
            self.head=new_node
            return
        current=self.head
        while(current.next):
            current=current.next
        current.next=new_node
        new_node.prev=current
    def display(self):
        current=self.head
        while(current):
            print(current.data)
            current=current.next
#main program
dll=Doublylinkedlist()
n=int(input())
for i in range(n):
    title=input()
    dll.insert_at_end(title)
dll.display()    
    


